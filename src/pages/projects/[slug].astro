---
import { Image } from "astro:assets";
import { render } from "astro:content";
import { getCollection } from "astro:content";
import DefaultLayout from "~/layouts/default.astro";
import Blockquote from "~components/mdx/blockquote.astro";
import MdxImage from "~components/mdx/image.astro";
import GgGlobeAlt from "~icons/gg/globe-alt";
import LogosGithubIcon from "~icons/logos/github-icon";
import { getDynamicImage } from "~utils/asset";
import { techList } from "~utils/tech-logo";
import { removeHttp } from "~utils/url";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.id },
    props: { entry: project },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);

const favicon = `${entry.data.demoUrl}/${entry.data.faviconPath}`;

const projectCover = getDynamicImage(entry.data.imageCover);
---

<DefaultLayout
  title={entry.data.title}
  desc={entry.data.summary}
  ogImage={entry.data.ogImage}
>
  <div class="container">
    <article>
      <div class="project-title">
        <Image
          src={favicon}
          alt={`${entry.data.title} favicon`}
          width="30"
          height="30"
          loading="eager"
        />
        <h1>{entry.data.title}</h1>
      </div>
      <div class="project-side">
        <Image
          transition:name="project-banner"
          src={projectCover()}
          class="cover"
          alt={`${entry.data.title} cover`}
          loading="eager"
        />
        <div class="meta">
          <div class="stack">
            <h4>Tech stacks</h4>
            <div class="tech">
              {
                entry.data.techs.map((tech) => {
                  const Logo = techList[tech].Logo;
                  return (
                    <div>
                      <Logo /> {techList[tech].label}
                    </div>
                  );
                })
              }
            </div>
          </div>
          {
            entry.data.demoUrl ? (
              <div class="stack">
                <h4>Demo</h4>
                <a href={entry.data.demoUrl}>
                  <GgGlobeAlt /> {removeHttp(entry.data.demoUrl)}
                </a>
              </div>
            ) : null
          }
          {
            entry.data.sourceUrl ? (
              <div class="stack">
                <h4>Source</h4>
                <a href={entry.data.sourceUrl}>
                  <LogosGithubIcon /> Github
                </a>
              </div>
            ) : null
          }
          <div class="stack">
            <h4>Year</h4>
            <p>{new Date(entry.data.releaseDate).getFullYear()}</p>
          </div>
        </div>
      </div>
      <div class="prose">
        <Content components={{ blockquote: Blockquote, img: MdxImage }} />
      </div>
    </article>
  </div>
</DefaultLayout>

<style is:global lang="scss">
  @use "../../styles/breakpoints" as br;
  @use "../../styles/typography";

  .container {
    margin-top: 2rem;
    max-width: var(--over-mw);
  }

  .project-title {
    display: flex;
    align-items: center;
    gap: 1rem;

    h1 {
      font-size: 2.25rem;
    }
  }

  .project-side {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 0.375rem;

    @include br.tablet {
      gap: 2rem;
      flex-direction: row;
      justify-content: space-between;
    }

    .cover {
      width: 100%;
      height: 230px;
      border-radius: 0.3125rem;
      border: 1px solid var(--slate-6);

      @include br.tablet {
        width: 550px;
        height: 330px;
      }

      @include br.desktop {
        width: 660px;
        height: 380px;
      }
    }

    .meta {
      height: 100%;
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 0.8rem;
      background: var(--slate-3);
      border: 1px solid var(--slate-6);
      border-radius: 0.25rem;
      padding: 1rem;

      @include br.tablet {
        gap: 0.5rem;
        padding: 1.2rem;
        min-height: 330px;
      }

      @include br.desktop {
        gap: 1rem;
        width: 400px;
        min-height: 380px;
      }

      & h4 {
        font-family: var(--font-body);
        margin-bottom: 0.2rem;
      }

      a {
        color: var(--fc-primary);
        text-decoration: none;
        display: flex;
        gap: 0.2rem;

        &:hover {
          text-decoration: underline;
        }
      }
    }
  }

  .stack {
    display: flex;
    flex-direction: column;
  }

  .tech {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.8rem;

    & > div {
      display: flex;
      gap: 0.2rem;
    }
  }

  .prose {
    margin-top: 1.5rem;
    max-width: 550px;

    @include br.desktop {
      max-width: 660px;
    }
  }
</style>
